@model IEnumerable<TipoCuenta>

@{
    ViewData["Title"] = "Tipos de cuentas";
}

<h1>Tipos de cuentas</h1>
<h5>El tipo de cuenta se refiere a cómo podemos agrupar cuentas. Ejemplos: Bizum, Tarjetas...</h5>

<a asp-action="Crear" class="btn btn-primary">Crear nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach (var tipoCuenta in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@tipoCuenta.Id" class="ids"/>
                    <a class="btn btn-primary" asp-action="Update" asp-route-id="@tipoCuenta.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@tipoCuenta.Id">Borrar</a>
                </td>
                <td>
                    @tipoCuenta.Nombre
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>

        let urlOrdenar = '@Url.Action("Order")';

        $(function(){
            $("#reordenable").sortable({
                stop: async function(e, ui){
                    await actualizarOrdenes()
                }
            });

            async function actualizarOrdenes(){
                const ids = obtenerIdsElementos()
                await enviarIdsBackend(ids)
            }

            function obtenerIdsElementos(){
                const ids = $(".ids").map(function(){
                    return $(this).val()
                }).get()
                
                return ids
            }

            async function enviarIdsBackend(ids){
                let data = JSON.stringify(ids)

                await fetch(urlOrdenar, {
                    method: "POST",
                    body: data,
                    headers:{
                        'Content-Type': "application/json"
                    }
                })
            }
        })


    </script>
}