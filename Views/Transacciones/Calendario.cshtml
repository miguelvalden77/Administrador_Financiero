@{
    ViewData["Title"] = "Reporte semanal";
}

<partial name="_Submenu" model="SubMenuTransacciones.Calendario"/>

<div id="calendario"></div>

<div id="modalTransacciones" class="modal fade" tabindex="-1">
    <section class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <header class="modal-header">
                <h5 class="modal-title">Transacciones del d√≠a</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </header>
            <main class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th id="modalTablaFecha" colspan="2"></th>
                            <th id="modalTablaIngresos" class="activo"></th>
                            <th id="modalTablaGastos" class="pasivo"></th>
                        </tr>
                    </thead>
                    <tbody id="modalTablaCuerpo">

                    </tbody>
                </table>
            </main>
            <footer class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </footer>
        </div>
    </section>
</div>

@section Scripts{
    <script src="~/lib/fullcalendar/main.min.js"></script>

    <script>

        const buscarTransaccionXFecha = async (fecha) =>{
            const response = await fetch(`/transacciones/ObtenerTransaccionesPorFecha?fecha=${fecha}`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json"
                }
            })

            const json = await response.json()
            let ingresos = 0
            let gastos = 0
            const tipoOperacionIngreso = 1

            const formateador = Intl.NumberFormat("en-US", {
                style: "currency",
                currency: "USD"
            })

            const filas = json.map(transaccion =>{
                if(transaccion.tipoOperacionId == tipoOperacionIngreso){
                    ingresos += transaccion.monto
                    console.log({ingresos})
                } else {
                    gastos += transaccion.monto
                }

            return `
            <tr>
                <td>${transaccion.categoria}</td>
                <td>${transaccion.cuenta}</td>
                <td style="text-align: right;" colspan="2" class=${transaccion.tipoOperacionId == tipoOperacionIngreso ? 'activo' : 'pasivo'}>${formateador.format(transaccion.monto)}</td>
            </tr>
            `
            })

            $("#modalTablaCuerpo").html(filas)
            $("#modalTablaIngresos").html(formateador.format(ingresos))
            $("#modalTablaGastos").html(formateador.format(gastos))
            $("modalTablaFecha").html(fecha)

            const modalTransacciones = new bootstrap.Modal(document.getElementById("modalTransacciones"))
            modalTransacciones.show()
        }


        document.addEventListener("DOMContentLoaded", function(){
            const calendarioEl = document.getElementById("calendario");
            const calendario = new FullCalendar.Calendar(calendarioEl, {
                dayMaxEventRows: 3,
                initialView: "dayGridMonth",
                events: "/transacciones/ObtenerTransaccionesCalendario",
                dateClick: async function(info){
                    await buscarTransaccionXFecha(info.dateStr)
                }
            })

            calendario.render()
        })
    </script>
}